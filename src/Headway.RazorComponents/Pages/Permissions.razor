@page "/permissions"
@inherits PermissionsBase
@using Microsoft.AspNetCore.Components.Forms

<AuthorizeView>
    <!--
    Need to specify the context to avoid clashes with other auto generated contexts
    https://github.com/chanan/BlazorStrap/issues/149 
    -->
    <Authorized Context="Auth">
        <h3>Permissions</h3>

        @if (Permissions == null)
        {
            <p><em>Loading permissions...</em></p>
        }
        else
        {
            <EditForm Model="@addPermission" OnValidSubmit="@SubmitPermission">
                <DataAnnotationsValidator/>
                <table>
                    <tbody>
                        <tr>
                            <td valign="middle" style="padding: 20px 5px 20px 5px;">Name:</td>
                            <td valign="middle" style="padding: 20px 0px 20px 5px;"><InputText id="permissionName" @bind-Value="addPermission.Name"/></td>
                            <td valign="middle" style="padding: 20px 5px 20px 0px;">
                                @if(InProgress)
                                {
                                    <i class="fas fa-spinner fa-spin fa-2x"></i>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-small btn-info fas fa-plus"/>
                                }
                            </td>
                            <td valign="middle" style="padding: 10px 5px 20px 5px;"><ValidationMessage For="() => addPermission.Name"/></td>
                        </tr>
                    </tbody>
                </table>
            </EditForm>

            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Roles</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var permission in Permissions)
                    {
                        <tr>
                            <td>@permission.PermissionId</td>
                            <td>@permission.Name</td>
                            <td>@string.Join(",", @permission.Roles.Select(r => r.Name).ToList())</td>
                            <td align="right">
@*                                @if(permission.CanEdit)
                                {
                                    <button class="btn btn-small btn-info fas fa-save" @onclick="() => UpdatePermission(permission)"/>
                                    <button class="btn btn-small btn-info fas fa-undo" @onclick="() => UndoUpdatePermission(permission)"/>
                                }
                                else
                                {
                                    <button class="btn btn-small btn-info fas fa-user-edit" @onclick="() => EditPermission(permission)"/>
                                }*@
                            </td>
                            <td>
                                <button type="button" class="btn btn-small btn-danger fas fa-times" @onclick="() => DeletePermission(permission)"/>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        <p>Please log in.</p>
    </NotAuthorized>
</AuthorizeView>
