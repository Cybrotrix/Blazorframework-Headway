@typeparam T where T : class, new()
@inherits ListDetailBase<T> 

<div class="container container-body float-start">
	<div class="row">
		<div class="col-sm">
            @if(dynamicModel != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                <ComponentTip Class="float-left borderless" Text="Clear selection"><button type="button" class="btn btn-small borderless btn-outline-dark fas fa-undo" @onclick="() => NewAsync()"/></ComponentTip>
                                <ComponentTip Class="float-left borderless" Text="Add to or update list"><button type="button" class="btn btn-small borderless btn-outline-primary fas fa-share-square" @onclick="() => AddAsync(dynamicModel)"/></ComponentTip>
                                <ComponentTip Class="float-end borderless" Text="Remove from list"><button type="button" class="btn btn-small borderless btn-outline-danger fas fa-times" @onclick="() => RemoveAsync(dynamicModel)"/></ComponentTip>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var rootContainer in dynamicModel.RootContainers)
                        {
                            <tr>
                                <td>
                                    <DynamicComponent @key="rootContainer.UniqueId" Type="rootContainer.DynamicComponent" Parameters="rootContainer.Parameters" />   
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
		</div>
		<div class="col-sm">
            @if (dynamicList != null)
            {
                <table class="table">
                    <MudTable Items="@dynamicList.DynamicListItems" 
                              Hover="true" Dense="true" Striped="true" Breakpoint="Breakpoint.Sm"
                              Filter="new Func<DynamicListItem<T>,bool>(FilterFunction)"
                              OnRowClick="RowClickEvent" T="DynamicListItem<T>">
                        <ToolBarContent>
                            <MudTextField @bind-Value="filterString" Placeholder="Filter" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </ToolBarContent>
                        <HeaderContent>
                            @foreach(var column in dynamicList.ConfigItems)
                            {
                                <MudTh>@column.Label</MudTh>
                            }
                        </HeaderContent>
                        <RowTemplate>
                            @foreach(var column in dynamicList.ConfigItems)
                            {
                                <MudTd DataLabel="@column.Label">@dynamicList.GetValue(@context.Model, column.PropertyName)</MudTd>                            
                            }
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </table>
            }
		</div>
	</div>
</div>
