@typeparam T where T : class, new()
@inherits ListDetailBase<T> 

<div class="container container-body float-start">
	<div class="row">
		<div class="col-sm">
            @if(dynamicModel != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                <ComponentTip Class="float-left borderless" Text="Clear selection"><button type="button" class="btn btn-small borderless btn-outline-dark fas fa-undo" @onclick="() => NewAsync()"/></ComponentTip>
                                <ComponentTip Class="float-left borderless" Text="Add to or update list"><button type="button" class="btn btn-small borderless btn-outline-primary fas fa-share-square" @onclick="() => AddAsync(dynamicModel)"/></ComponentTip>
                                <ComponentTip Class="float-end borderless" Text="Remove from list"><button type="button" class="btn btn-small borderless btn-outline-danger fas fa-times" @onclick="() => RemoveAsync(dynamicModel)"/></ComponentTip>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var rootContainer in dynamicModel.RootContainers)
                        {
                            <tr>
                                <td>
                                    <DynamicComponent @key="rootContainer.UniqueId" Type="rootContainer.DynamicComponent" Parameters="rootContainer.Parameters" />   
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
		</div>
		<div class="col-sm">
            @if (dynamicList != null)
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            @foreach (var column in dynamicList.ConfigItems)
                            {
                                <th>@column.Label</th>
                            }
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var listIitem in dynamicList.DynamicListItems)
                        {
                            <tr>
                                @foreach (var column in dynamicList.ConfigItems)
                                {
                                    <td>
                                        @dynamicList.GetValue(listIitem.Model, column.PropertyName)
                                    </td>
                                }
                                <td>
                                    <ComponentTip Text="Edit"><button type="button" class="btn btn-small borderless btn-outline-primary fas fa-edit" @onclick="() => EditAsync(listIitem)"/></ComponentTip>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
		</div>
	</div>
</div>
