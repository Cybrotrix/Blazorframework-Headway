@using Headway.Core.Dynamic
@using Headway.Core.Model
@using Microsoft.AspNetCore.Components.Forms
@using System.Reflection
@using System.Linq.Expressions

<div class="mb-1">
    <div class="row">
        <div class="col-sm-4 col-form-label">
            @Field.Label
        </div>
        <div class="col-sm-8">
            <InputText class="form-control" ValueChanged="OnValueChanged" Value="@PropertyValue" ValueExpression="FieldExpression" />
            <ValidationMessage For="FieldExpression"/>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public DynamicField Field { get; set; }

    public Expression<Func<string>> FieldExpression
    {
        get
        {
            return Expression.Lambda<Func<string>>(Field.MemberExpression);
        }
    }

    public string PropertyValue
    {
        get
        {
            return Field.PropertyInfo.GetValue(Field.Model)?.ToString();
        }
    }

    public void OnValueChanged(string value)
    {
        Field.PropertyInfo.SetValue(Field.Model, value);
    }
}